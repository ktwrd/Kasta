@using Microsoft.AspNetCore.Identity
@using Kasta.Data
@using Kasta.Data.Models
@using Kasta.Web.Helpers
@using Kasta.Web.Models.Components
@using Microsoft.EntityFrameworkCore
@using Vivet.AspNetCore.RequestTimeZone.Extensions
@inject ApplicationDbContext _db
@inject SignInManager<UserModel> SignInManager
@inject UserManager<UserModel> UserManager
@inject IHttpContextAccessor HttpContextAccessor
@model FileListViewModel

@{
    ViewData["Title"] = "Files";
    Layout = "_Layout";
    var userModel = await UserManager.GetUserAsync(User);
    var userSetting = await _db.GetUserSettingsAsync(userModel!);
}


<div class="card shadow-sm">
    <div class="card-body">
        <table class="table-inline">
            <tr>
            <th>Space Used</th>
            <td>@Model.SpaceUsed</td>
            @if (!string.IsNullOrEmpty(Model.SpaceAvailable))
            {
                <th>Space Available</th>
                <td>@Model.SpaceAvailable</td>
            }
            </tr>
        </table>
        
        <div class="row">
            <div class="col-md-4 mb-3 d-flex justify-content-between justify-content-md-start">
                <form class="mr-1" asp-controller="Home" asp-action="Index">
                    <div class="input-group">
                        <input class="form-control" type="text" name="search" placeholder="Search"/>
                        <button class="btn btn-secondary" type="submit"><i class="bi bi-search"></i></button>
                    </div>
                </form>
            </div>
            <div class="col-md-4 d-flex justify-content-center">
                <nav>
                    <ul class="pagination">
                        @if (Model.Page > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-controller="Home" asp-action="Index" asp-route-page="@(Model.Page - 1)" asp-route-search="@Model.SearchQuery" aria-label="Previous">
                                    <i class="bi bi-chevron-left"></i>
                                </a>
                            </li>
                        }
                        @if (!Model.IsLastPage)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-controller="Home" asp-action="Index" asp-route-page="@(Model.Page + 1)" asp-route-search="@Model.SearchQuery" aria-label="Next">
                                    <i class="bi bi-chevron-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
            <div class="col-md-4 mb-3 d-flex justify-content-md-end justify-content-between">
                <a class="btn btn-secondary" asp-controller="Home" asp-action="Upload">
                    <i class="bi bi-upload"></i>
                    Upload
                </a>
            </div>
        </div>

        <table class="table">
            <thead>
            <tr>
                <th colspan="2">Filename</th>
                <th>Created At</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var file in Model.Files)
            {
                @await Component.InvokeAsync("FileListItem", new FileListItemComponentViewModel()
                {
                    File = file,
                    UserSettings = userSetting
                })
            }
            </tbody>
        </table>
    </div>
</div>
