@using Microsoft.AspNetCore.Identity
@using Kasta.Data
@using Kasta.Data.Models
@using Kasta.Web.Models.Components
@inject ApplicationDbContext Database
@inject UserManager<UserModel> UserManager
@model FileListViewModel

@{
    ViewData["CurrentNavItem"] = "home";
    ViewData["Title"] = "Files";
    Layout = "_Layout";
    var userModel = await UserManager.GetUserAsync(User);
    var userSetting = await Database.GetUserSettingsAsync(userModel!);
}


<div class="card shadow-sm">
    <div class="card-body">
        <table class="table-inline">
            <tr>
                <th>Space Used</th>
                <td>@Model.SpaceUsed</td>
                @if (!string.IsNullOrEmpty(Model.SpaceAvailable))
                {
                    <th>Space Available</th>
                    <td>@Model.SpaceAvailable</td>
                }
            </tr>
        </table>

        <div class="row">
            <div class="col-md-4 mb-3 d-flex justify-content-between justify-content-md-start">
                <form class="mr-1" asp-controller="Home" asp-action="Index" method="GET">
                    <input type="hidden" name="page" value="@Model.Page"/>
                    <div class="input-group">
                        <input class="form-control" type="text" name="search" placeholder="Search" value="@Model.SearchQuery"/>
                        <button class="btn btn-secondary" type="submit"><i class="bi bi-search"></i></button>
                    </div>
                </form>
            </div>
            <div class="col-md-4 d-flex justify-content-center">
                <nav>
                    @await Component.InvokeAsync("Pagination", new PaginationComponentViewModel()
                    {
                        Page = Model.Page,
                        TotalPageCount = Model.TotalPageCount,
                        IsLastPage = Model.IsLastPage,
                        CreateUrlDelegate = (page) =>
                        {
                            return Url.Action("Index",
                                "Home",
                                new
                                {
                                    page = page,
                                    search = Model.SearchQuery,
                                    Area = ""
                                }) ?? "#";
                        }
                    })
                </nav>
            </div>
            <div class="col-md-4 mb-3 d-flex justify-content-md-end justify-content-between">
                <a class="btn btn-secondary" asp-controller="Home" asp-action="Upload">
                    <i class="bi bi-upload"></i>
                    Upload
                </a>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table">
                <thead>
                <tr>
                    <th colspan="2">Filename</th>
                    <th>Created At</th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                @foreach (var file in Model.Files)
                {
                    @await Component.InvokeAsync("FileListItem", new FileListItemComponentViewModel()
                    {
                        File = file,
                        UserSettings = userSetting
                    })
                }
                </tbody>
            </table>
        </div>
    </div>
</div>
