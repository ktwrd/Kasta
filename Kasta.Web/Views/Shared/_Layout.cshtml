@using Kasta.Data
@using Kasta.Data.Models
@using Kasta.Web.Helpers
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@inject SignInManager<UserModel> SignInManager
@inject UserManager<UserModel> UserManager
@inject ApplicationDbContext _db
@{
    UserLimitModel? userLimit = null;
    var systemSettings = _db.GetSystemSettings();
    var appTitle = systemSettings.EnableCustomBranding ? systemSettings.CustomBrandingTitle : "Kasta";
    string bootstrapThemeAttributeValue = "auto";
    string currentTheme = "";
    bool isAdmin = false;
    if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        var settings = await _db.GetUserSettingsAsync(user!);
        isAdmin = user?.IsAdmin ?? false;
        if (!string.IsNullOrEmpty(settings.ThemeName))
        {
            currentTheme = settings.ThemeName.Trim().ToLower();
            if (currentTheme == "2010")
            {
                bootstrapThemeAttributeValue = "dark";
            }
        }
        userLimit = user?.Limit;

        if (currentTheme == "dark" || currentTheme == "light")
        {
            bootstrapThemeAttributeValue = currentTheme;
        }
    }

    string? userQuotaValue = "null";
    if (systemSettings.EnableQuota)
    {
        if (userLimit?.MaxFileSize != null)
        {
            userQuotaValue = $"parseInt('{userLimit?.MaxFileSize}')";
        }
        else if (systemSettings.DefaultUploadQuotaReal > -1)
        {
            userQuotaValue = $"'parseInt({systemSettings.DefaultUploadQuotaReal})'";
        }
    }

    string versionString = "";
    var ver = typeof(Kasta.Web.Program).Assembly.GetName().Version;
    if (ver != null)
    {
        if (ver.Revision > 0 && ver.Build > 0 && ver.Minor > 0)
        {
            versionString = ver.ToString();
        }
        else if (ver.Revision <= 0 && ver.Build > 0 && ver.Minor > 0)
        {
            versionString = $"{ver.Major}.{ver.Minor}.{ver.Build}";
        }
        else if (ver.Revision <= 0 && ver.Build <= 0 && ver.Minor > 0)
        {
            versionString = $"{ver.Major}.{ver.Minor}";
        }
        else if (ver.Revision <= 0 && ver.Build <= 0 && ver.Minor <= 0)
        {
            versionString = $"{ver.Major}";
        }
        else
        {
            versionString = ver.ToString();
        }
        versionString = $"v{versionString}";
    }
}
<!DOCTYPE html>
<html lang="en" data-bs-theme="@bootstrapThemeAttributeValue">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"]
        @if (!string.IsNullOrEmpty(appTitle))
        {
            var a = appTitle.Replace("<", "&lt;").Replace(">", "&gt;");
            @Html.Raw($"- {a}")
        }
    </title>
    <link rel="stylesheet" href="~/lib/dropzone/css/dropzone.min.css" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"/>
    <link rel="stylesheet" href="~/lib/bootstrap-icons/font/bootstrap-icons.min.css"/>
    @if (currentTheme == "2010")
    {
        <link rel="stylesheet" href="~/css/theme-2010.css" asp-append-version="true"/>
    }
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true"/>
    @if (ViewData.ContainsKey("Highlight"))
    {
        if (bootstrapThemeAttributeValue == "dark")
        {
            <link rel="stylesheet" href="~/lib/highlightjs/styles/dark.min.css" />
        }
        else
        {
            <link rel="stylesheet" href="~/lib/highlightjs/styles/default.min.css" />
        }
    }
    <script type="text/javascript">
        window.UserLimits = {
            MaxUploadQuota: @(systemSettings.EnableQuota ? "null" : (userLimit?.MaxFileSize ?? systemSettings.DefaultUploadQuotaReal)?.ToString() ?? "null")
        };
    </script>
    @await RenderSectionAsync("Head", required: false)
</head>
<body>
<header>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm border-bottom box-shadow mb-3">
        <div class="container-fluid">
            @if (!string.IsNullOrEmpty(appTitle))
            {
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">@appTitle</a>
            }
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav flex-grow-1">
                    <li class="nav-item">
                        <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Index">
                            <i class="bi bi-house-door"></i>
                            Home
                        </a>
                    </li>
                    @if (isAdmin)
                    {
                        <li class="nav-item">
                            <a class="nav-link" asp-controller="Admin" asp-action="Index">
                                <i class="bi bi-gear"></i>
                                System
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-area="Admin" asp-controller="User" asp-action="List">
                                <i class="bi bi-people"></i>
                                Users
                            </a>
                        </li>
                    }
                </ul>
                <partial name="_LoginPartial"/>
            </div>
        </div>
    </nav>
</header>
<div class="container">
    <main role="main" class="pb-3">
        @RenderBody()
    </main>
</div>

<div class="container-fluid footer">
    <div class="text-muted">
        Powered by <a href="https://github.com/ktwrd/Kasta">Kasta @(versionString)</a>
        &bull;
        <a href="https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html">GPL v2</a>
    </div>
</div>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/lib/dropzone/js/dropzone.min.js"></script>
@if (ViewData.ContainsKey("Highlight"))
{
    <script src="~/lib/highlightjs/highlight.min.js"></script>
    <script type="application/javascript">hljs.highlightAll();</script>
}
<script src="~/js/site.js" asp-append-version="true"></script>
@await RenderSectionAsync("Scripts", required: false)
</body>
</html>