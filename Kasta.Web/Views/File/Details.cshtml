@using Kasta.Data.Models
@using Kasta.Web.Helpers
@using Vivet.AspNetCore.RequestTimeZone.Extensions
@model FileDetailViewModel
@inject IHttpContextAccessor ctx

@{
    ViewData["Title"] = $"{Model.File.Filename}";
    Layout = "_Layout";

    var previewUrl = Model.File.GetPreviewUrl();
    var downloadUrl = Model.File.GetDownloadUrl();
    
    TimeZoneInfo targetTimezone = TimeZoneInfo.Utc;
    if (ctx.HttpContext != null)
    {
        var tz = ctx.HttpContext.GetUserTimeZone();
        if (tz != null)
        {
            targetTimezone = tz;
        }
    }

    var codeBlockClass = "";
    if (!string.IsNullOrEmpty(System.IO.Path.GetExtension(Model.File.Filename)) && !string.IsNullOrEmpty(Model.PreviewContent))
    {
        var ext = System.IO.Path.GetExtension(Model.File.Filename).Substring(1);
        codeBlockClass = $"language-{ext}";
        ViewData["Highlight"] = true;
    }
}

<div class="row">
    <div class="col-md-12 justify-content-center">
        <div class="row mb-2">
            <div class="col-md-12 text-center">
                @if (Model.File.MimeType?.StartsWith("image/") ?? false)
                {
                    @if (!string.IsNullOrEmpty(previewUrl))
                    {
                        <div id="previewContainer" class="img-thumbnail rounded d-block">
                            <img src="@previewUrl"
                                 class="rounded mx-auto d-block"
                                 alt="@Model.File.Filename (Preview)"
                                 onload="document.getElementById('realImage').setAttribute('src', '@downloadUrl');" />
                            <span>Displaying Preview. Full Image is loading.</span>
                        </div>
                        <img src=""
                             class="d-none"
                             alt="@Model.File.Filename"
                             onload="document.getElementById('previewContainer').remove();
                             document.getElementById('realImage').setAttribute('class', 'img-thumbnail rounded mx-auto d-block')"
                             id="realImage"/>
                    }
                    else
                    {
                        <img src="@downloadUrl" class="img-thumbnail rounded mx-auto d-block" alt="@Model.File.Filename"/>
                    }
                }
                else if (Model.File.MimeType?.StartsWith("video/") ?? false)
                {
                    <video width="320" height="240" controls class="rounded mx-auto d-block">
                        <source src="@downloadUrl" type="@Model.File.MimeType" />
                    </video>
                }
                else if (Model.File.MimeType?.StartsWith("audio/") ?? false)
                {
                    <audio controls class="rounded mx-auto d-block">
                        <source src="@downloadUrl" type="@Model.File.MimeType" />
                    </audio>
                }
                else if (!string.IsNullOrEmpty(Model.PreviewContent))
                {
                    <div class="mx-auto d-block rounded text-preview hljs">
                        <pre><code class="@codeBlockClass">@Model.PreviewContent</code></pre>
                    </div>
                    <br/>
                    <div class="mx-auto d-block">
                        <a class="btn btn-lg btn-primary" href="@downloadUrl">
                            <i class="bi bi-cloud-download"></i>
                            Download
                        </a>
                    </div>
                }
                else
                {
                    <div class="mx-auto d-block">
                        <a class="btn btn-lg btn-primary" href="@downloadUrl">
                            <i class="bi bi-cloud-download"></i>
                            Download
                        </a>
                    </div>
                }
            </div>
        </div>
        <div class="row mt-1">
            <div class="col-md-12 text-center">
                <i class="bi bi-stack"></i>
                @SizeHelper.BytesToString(Model.File.Size)
            </div>
        </div>
        <div class="row mt-1">
            <div class="col-md-12 text-center">
                <i class="bi bi-file-earmark"></i>
                @Model.File.Filename
            </div>
        </div>
        @if (Model.File.ImageInfo != null)
        {
            <div class="row mt-1">
                <div class="col-md-12 text-center">
                    <i class="bi bi-image"></i>
                    @Model.File.ImageInfo.FormatString()
                </div>
            </div>
        }
        <div class="row mt-1">
            <div class="col-md-12 text-center">
                <i class="bi bi-calendar"></i>
                @TimeZoneInfo.ConvertTimeFromUtc(Model.File.CreatedAt.UtcDateTime, targetTimezone)
            </div>
        </div>
    </div>
</div>

@section Head
{
    @if (Model.Embed)
    {
        <meta name="twitter:card" content="summary_image_large" />
        <meta property="og:type" content="website"/>
        <meta id="embed-title" property="og:title" content="@(Model.File.Filename) (@(SizeHelper.BytesToString(Model.File.Size)))" />
        <meta id="embed-desc" property="og:description" content="@(TimeZoneInfo.ConvertTimeFromUtc(Model.File.CreatedAt.UtcDateTime, targetTimezone))" />
        @if (Model.File.MimeType?.StartsWith("image/") ?? false)
        {
            <meta id="embed-image" property="og:image" content="@downloadUrl">
            <meta id="discord" name="twitter:image" content="@downloadUrl">
            <meta id="image-src" name="twitter:image:src" content="@downloadUrl">
        }
        else if (Model.File.MimeType?.StartsWith("video/") ?? false)
        {
            <meta name="twitter:card" content="player" />
            <meta name="twitter:title" content="@(Model.File.Filename) (@(SizeHelper.BytesToString(Model.File.Size)))" />
            <meta name="twitter:image" content="0" />
            <meta name="twitter:player:stream" content="@downloadUrl" />
            <meta name="twitter:player:width" content="720" />
            <meta name="twitter:player:height" content="480" />
            <meta name="twitter:player:stream:content_type" content="@Model.File.MimeType" />

            <meta property="og:url" content="@downloadUrl" />
            <meta property="og:video" content="@downloadUrl" />
            <meta property="og:video:secure_url" content="@downloadUrl" />
            <meta property="og:video:type" content="@Model.File.MimeType" />
            <meta property="og:video:width" content="720" />
            <meta property="og:video:height" content="480" />
            <meta property="og:image" content="0" />
        }
    }
}