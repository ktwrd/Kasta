@using Kasta.Data.Models
@using Kasta.Web.Helpers
@using Vivet.AspNetCore.RequestTimeZone.Extensions
@model FileDetailViewModel
@inject IHttpContextAccessor ctx

@{
    ViewData["Title"] = $"{Model.File.Filename}";
    Layout = "_Layout";

    var previewUrl = Model.File.GetPreviewUrl();
    var downloadUrl = Model.File.GetDownloadUrl();
    
    TimeZoneInfo targetTimezone = TimeZoneInfo.Utc;
    if (ctx.HttpContext != null)
    {
        var tz = ctx.HttpContext.GetUserTimeZone();
        if (tz != null)
        {
            targetTimezone = tz;
        }
    }
}

<div class="row">
    <div class="col-md-12 justify-content-center">
        <div class="row mb-2">
            <div class="col-md-12 text-center">
                @if (Model.File.MimeType?.StartsWith("image/") ?? false)
                {
                    @if (!string.IsNullOrEmpty(previewUrl))
                    {
                        <div id="previewContainer" class="img-thumbnail rounded d-block">
                            <img src="@previewUrl"
                                 class="rounded mx-auto d-block"
                                 alt="@Model.File.Filename (Preview)"
                                 onload="document.getElementById('realImage').setAttribute('src', '@downloadUrl');" />
                            <span>Displaying Preview. Full Image is loading.</span>
                        </div>
                        <img src=""
                             class="d-none"
                             alt="@Model.File.Filename"
                             onload="document.getElementById('previewContainer').remove();
                             document.getElementById('realImage').setAttribute('class', 'img-thumbnail rounded mx-auto d-block')"
                             id="realImage"/>
                    }
                    else
                    {
                        <img src="@downloadUrl" class="img-thumbnail rounded mx-auto d-block" alt="@Model.File.Filename"/>
                    }
                }
                else if (Model.File.MimeType?.StartsWith("video/") ?? false)
                {
                    <video width="320" height="240" controls class="rounded mx-auto d-block">
                        <source src="@downloadUrl" type="@Model.File.MimeType" />
                    </video>
                }
                else if (Model.File.MimeType?.StartsWith("audio/") ?? false)
                {
                    <audio controls class="rounded mx-auto d-block">
                        <source src="@downloadUrl" type="@Model.File.MimeType" />
                    </audio>
                }
                else if (!string.IsNullOrEmpty(Model.PreviewContent))
                {
                    <div class="mx-auto d-block rounded text-preview">
                        <pre><code>@Model.PreviewContent</code></pre>
                    </div>
                    <br/>
                    <div class="mx-auto d-block">
                        <a class="btn btn-lg btn-primary" href="@downloadUrl">
                            <i class="bi bi-cloud-download"></i>
                            Download
                        </a>
                    </div>
                }
                else
                {
                    <div class="mx-auto d-block">
                        <a class="btn btn-lg btn-primary" href="@downloadUrl">
                            <i class="bi bi-cloud-download"></i>
                            Download
                        </a>
                    </div>
                }
            </div>
        </div>
        <div class="row mt-1">
            <div class="col-md-12 text-center">
                <i class="bi bi-stack"></i>
                @SizeHelper.BytesToString(Model.File.Size)
            </div>
        </div>
        <div class="row mt-1">
            <div class="col-md-12 text-center">
                <i class="bi bi-file-earmark"></i>
                @Model.File.Filename
            </div>
        </div>
        @if (Model.File.ImageInfo != null)
        {
            <div class="row mt-1">
                <div class="col-md-12 text-center">
                    <i class="bi bi-image"></i>
                    @Model.File.ImageInfo.FormatString()
                </div>
            </div>
        }
        <div class="row mt-1">
            <div class="col-md-12 text-center">
                <i class="bi bi-calendar"></i>
                @TimeZoneInfo.ConvertTimeFromUtc(Model.File.CreatedAt.UtcDateTime, targetTimezone)
            </div>
        </div>
    </div>
</div>